export interface GLFWObject {}

export interface GLFWMonitor extends GLFWObject {}
export interface GLFWWindow extends GLFWObject {}
export interface GLFWCursor extends GLFWObject {}

export interface GLFWVideoMode extends GLFWObject {
    redBits: number;
    greenBits: number;
    blueBits: number;
    height: number;
    width: number;
    refreshRate: number;
}

export interface GLFWPosition extends GLFWObject {
    xpos: number;
    ypos: number;
}

export interface GLFWVersion extends GLFWObject {
    major: number;
    minor: number;
    rev: number;
}

export interface GLFWSize extends GLFWObject {
    width: number;
    height: number;
}

export interface GLFW {
    readonly makeContextCurrent: (_window: GLFWWindow) => void;
    readonly getCurrentContext: () => number;
    readonly swapInterval: (interval: number) => void;
    readonly extensionSupported: (extension: string) => boolean;
    readonly getProcAddress: (procname: string) => number;
    readonly init: () => boolean;
    readonly terminate: () => void;
    readonly getVersion: () => GLFWVersion;
    readonly getVersionString: () => string;
    readonly setErrorCallback: (cb: (err: number, description: string) => void) => void;
    readonly createStandardCursor: (shape: number) => number;
    readonly destroyCursor: (_cursor: number) => void;
    readonly getClipboardString: (_window: GLFWWindow) => string;
    readonly getCursorPos: (_window: GLFWWindow) => GLFWPosition;
    readonly getInputMode: (_window: GLFWWindow, mode: number) => number;
    readonly getJoystickAxes: (joy: number) => number[];
    readonly getJoystickButtons: (joy: number) => number[];
    readonly getJoystickName: (joy: number) => string;
    readonly getKey: (_window: GLFWWindow, key: number) => number;
    readonly getKeyName: (key: number, scancode: number) => string;
    readonly getMouseButton: (_window: GLFWWindow, button: number) => number;
    readonly getTime: () => number;
    readonly getTimerFrequency: () => number;
    readonly getTimerValue: () => number;
    readonly joystickPresent: (joy: number) => boolean;
    readonly setClipboardString: (_window: GLFWWindow, content: string) => void;
    readonly setCursor: (_window: GLFWWindow, _cursor: GLFWCursor) => void;
    readonly setCursorPos: (_window: GLFWWindow, xpos: number, ypos: number) => void;
    readonly setCursorPosCallback: (_window: GLFWWindow, cb: (_window: GLFWWindow, xpos: number, ypos: number) => void) => void;
    readonly setInputMode: (_window: GLFWWindow, mode: number, value: number) => void;
    readonly setKeyCallback: (_window: GLFWWindow, cb: (_window: GLFWWindow, key: number, scancode: number, action: number, mods: number) => void) => void;
    readonly setMouseButtonCallback: (_window: GLFWWindow, cb: (_window: GLFWWindow, button: number, action: number, mods: number) => void) => void;
    readonly setTime: (time: number) => void;
    readonly getMonitors: () => GLFWMonitor[];
    readonly getPrimaryMonitor: () => GLFWMonitor;
    readonly getVideoModes: (_monitor: GLFWMonitor) => GLFWVideoMode[];
    readonly getVideoMode: (_monitor: GLFWMonitor) => GLFWVideoMode;
    readonly windowHint: (hint: number, value: number) => void;
    readonly createWindow: (width: number, height: number, title: string, _monitor?: GLFWMonitor, _share?: GLFWWindow) => number;
    readonly destroyWindow: (_window: GLFWWindow) => void;
    readonly windowShouldClose: (_window: GLFWWindow) => boolean;
    readonly setWindowTitle: (_window: GLFWWindow, title: string) => void;
    readonly getWindowSize: (_window: GLFWWindow) => GLFWSize;
    readonly setWindowSize: (_window: GLFWWindow, width: number, height: number) => void;
    readonly getFramebufferSize: (_window: GLFWWindow) => GLFWSize;
    readonly setWindowSizeCallback: (_window: GLFWWindow, cb: (_window: GLFWWindow, width: number, height: number) => void) => void;
    readonly setWindowCloseCallback: (_window: GLFWWindow, cb: (_window: GLFWWindow) => void) => void;
    readonly setFramebufferSizeCallback: (_window: GLFWWindow, cb: (_window: GLFWWindow, width: number, height: number) => void) => void;
    readonly pollEvents: () => void;
    readonly swapBuffers: (_window: GLFWWindow) => void;

    readonly VERSION_MAJOR: number;
    readonly VERSION_MINOR: number;
    readonly VERSION_REVISION: number;
    readonly NOT_INITIALIZED: number;
    readonly NO_CURRENT_CONTEXT: number;
    readonly INVALID_ENUM: number;
    readonly INVALID_VALUE: number;
    readonly OUT_OF_MEMORY: number;
    readonly API_UNAVAILABLE: number;
    readonly VERSION_UNAVAILABLE: number;
    readonly PLATFORM_ERROR: number;
    readonly FORMAT_UNAVAILABLE: number;
    readonly NO_WINDOW_CONTEXT: number;
    readonly PRESS: number;
    readonly RELEASE: number;
    readonly REPEAT: number;
    readonly JOYSTICK_1: number;
    readonly JOYSTICK_2: number;
    readonly JOYSTICK_3: number;
    readonly JOYSTICK_4: number;
    readonly JOYSTICK_5: number;
    readonly JOYSTICK_6: number;
    readonly JOYSTICK_7: number;
    readonly JOYSTICK_8: number;
    readonly JOYSTICK_9: number;
    readonly JOYSTICK_10: number;
    readonly JOYSTICK_12: number;
    readonly JOYSTICK_13: number;
    readonly JOYSTICK_14: number;
    readonly JOYSTICK_15: number;
    readonly JOYSTICK_16: number;
    readonly JOYSTICK_LAST: number;
    readonly KEY_UNKNOWN: number;
    readonly KEY_SPACE: number;
    readonly KEY_APOSTROPHE: number;
    readonly KEY_COMMA: number;
    readonly KEY_MINUS: number;
    readonly KEY_PERIOD: number;
    readonly KEY_SLASH: number;
    readonly KEY_0: number;
    readonly KEY_1: number;
    readonly KEY_2: number;
    readonly KEY_3: number;
    readonly KEY_4: number;
    readonly KEY_5: number;
    readonly KEY_6: number;
    readonly KEY_7: number;
    readonly KEY_8: number;
    readonly KEY_9: number;
    readonly KEY_SEMICOLON: number;
    readonly KEY_EQUAL: number;
    readonly KEY_A: number;
    readonly KEY_B: number;
    readonly KEY_C: number;
    readonly KEY_D: number;
    readonly KEY_E: number;
    readonly KEY_F: number;
    readonly KEY_G: number;
    readonly KEY_H: number;
    readonly KEY_I: number;
    readonly KEY_J: number;
    readonly KEY_K: number;
    readonly KEY_L: number;
    readonly KEY_M: number;
    readonly KEY_N: number;
    readonly KEY_O: number;
    readonly KEY_P: number;
    readonly KEY_Q: number;
    readonly KEY_R: number;
    readonly KEY_S: number;
    readonly KEY_T: number;
    readonly KEY_U: number;
    readonly KEY_V: number;
    readonly KEY_W: number;
    readonly KEY_X: number;
    readonly KEY_Y: number;
    readonly KEY_Z: number;
    readonly KEY_LEFT_BRACKET: number;
    readonly KEY_BACKSLASH: number;
    readonly KEY_RIGHT_BRACKET: number;
    readonly KEY_GRAVE_ACCENT: number;
    readonly KEY_WORLD_1: number;
    readonly KEY_WORLD_2: number;
    readonly KEY_ESCAPE: number;
    readonly KEY_ENTER: number;
    readonly KEY_TAB: number;
    readonly KEY_BACKSPACE: number;
    readonly KEY_INSERT: number;
    readonly KEY_DELETE: number;
    readonly KEY_RIGHT: number;
    readonly KEY_LEFT: number;
    readonly KEY_DOWN: number;
    readonly KEY_UP: number;
    readonly KEY_PAGE_UP: number;
    readonly KEY_PAGE_DOWN: number;
    readonly KEY_HOME: number;
    readonly KEY_END: number;
    readonly KEY_CAPS_LOCK: number;
    readonly KEY_SCROLL_LOCK: number;
    readonly KEY_NUM_LOCK: number;
    readonly KEY_PRINT_SCREEN: number;
    readonly KEY_PAUSE: number;
    readonly KEY_F1: number;
    readonly KEY_F2: number;
    readonly KEY_F3: number;
    readonly KEY_F4: number;
    readonly KEY_F5: number;
    readonly KEY_F6: number;
    readonly KEY_F7: number;
    readonly KEY_F8: number;
    readonly KEY_F9: number;
    readonly KEY_F10: number;
    readonly KEY_F11: number;
    readonly KEY_F12: number;
    readonly KEY_F13: number;
    readonly KEY_F14: number;
    readonly KEY_F15: number;
    readonly KEY_F16: number;
    readonly KEY_F17: number;
    readonly KEY_F18: number;
    readonly KEY_F19: number;
    readonly KEY_F20: number;
    readonly KEY_F21: number;
    readonly KEY_F22: number;
    readonly KEY_F23: number;
    readonly KEY_F24: number;
    readonly KEY_F25: number;
    readonly KEY_KP_0: number;
    readonly KEY_KP_1: number;
    readonly KEY_KP_2: number;
    readonly KEY_KP_3: number;
    readonly KEY_KP_4: number;
    readonly KEY_KP_5: number;
    readonly KEY_KP_6: number;
    readonly KEY_KP_7: number;
    readonly KEY_KP_8: number;
    readonly KEY_KP_9: number;
    readonly KEY_KP_DECIMAL: number;
    readonly KEY_KP_DIVIDE: number;
    readonly KEY_KP_MULTIPLY: number;
    readonly KEY_KP_SUBTRACT: number;
    readonly KEY_KP_ADD: number;
    readonly KEY_KP_ENTER: number;
    readonly KEY_KP_EQUAL: number;
    readonly KEY_LEFT_SHIFT: number;
    readonly KEY_LEFT_CONTROL: number;
    readonly KEY_LEFT_ALT: number;
    readonly KEY_LEFT_SUPER: number;
    readonly KEY_RIGHT_SHIFT: number;
    readonly KEY_RIGHT_CONTROL: number;
    readonly KEY_RIGHT_ALT: number;
    readonly KEY_RIGHT_SUPER: number;
    readonly KEY_MENU: number;
    readonly KEY_LAST: number;
    readonly MOD_SHIFT: number;
    readonly MOD_CONTROL: number;
    readonly MOD_ALT: number;
    readonly MOD_SUPER: number;
    readonly MOUSE_BUTTON_1: number;
    readonly MOUSE_BUTTON_2: number;
    readonly MOUSE_BUTTON_3: number;
    readonly MOUSE_BUTTON_4: number;
    readonly MOUSE_BUTTON_5: number;
    readonly MOUSE_BUTTON_6: number;
    readonly MOUSE_BUTTON_7: number;
    readonly MOUSE_BUTTON_8: number;
    readonly MOUSE_BUTTON_LAST: number;
    readonly MOUSE_BUTTON_LEFT: number;
    readonly MOUSE_BUTTON_RIGHT: number;
    readonly MOUSE_BUTTON_MIDDLE: number;
    readonly ARROW_CURSOR: number;
    readonly IBEAM_CURSOR: number;
    readonly CROSSHAIR_CURSOR: number;
    readonly HAND_CURSOR: number;
    readonly HRESIZE_CURSOR: number;
    readonly VRESIZE_CURSOR: number;
    readonly RESIZABLE: number;
    readonly VISIBLE: number;
    readonly DECORATED: number;
    readonly FOCUSED: number;
    readonly AUTO_ICONIFY: number;
    readonly FLOATING: number;
    readonly MAXIMIZED: number;
    readonly RED_BITS: number;
    readonly GREEN_BITS: number;
    readonly BLUE_BITS: number;
    readonly ALPHA_BITS: number;
    readonly DEPTH_BITS: number;
    readonly STENCIL_BITS: number;
    readonly ACCUM_RED_BITS: number;
    readonly ACCUM_GREEN_BITS: number;
    readonly ACCUM_BLUE_BITS: number;
    readonly ACCUM_ALPHA_BITS: number;
    readonly AUX_BUFFERS: number;
    readonly SAMPLES: number;
    readonly REFRESH_RATE: number;
    readonly STEREO: number;
    readonly SRGB_CAPABLE: number;
    readonly DOUBLEBUFFER: number;
    readonly CLIENT_API: number;
    readonly CONTEXT_CREATION_API: number;
    readonly CONTEXT_VERSION_MAJOR: number;
    readonly CONTEXT_VERSION_MINOR: number;
    readonly CONTEXT_ROBUSTNESS: number;
    readonly CONTEXT_RELEASE_BEHAVIOR: number;
    readonly OPENGL_FORWARD_COMPAT: number;
    readonly OPENGL_DEBUG_CONTEXT: number;
    readonly OPENGL_PROFILE: number;
    readonly DONT_CARE: number;
    readonly ICONIFIED: number;
    readonly OPENGL_API: number;
    readonly OPENGL_ES_API: number;
    readonly NO_API: number;
    readonly NATIVE_CONTEXT_API: number;
    readonly EGL_CONTEXT_API: number;
    readonly NO_ROBUSTNESS: number;
    readonly NO_RESET_NOTIFICATION: number;
    readonly LOSE_CONTEXT_ON_RESET: number;
    readonly ANY_RELEASE_BEHAVIOR: number;
    readonly RELEASE_BEHAVIOR_FLUSH: number;
    readonly RELEASE_BEHAVIOR_NONE: number;
    readonly OPENGL_ANY_PROFILE: number;
    readonly OPENGL_COMPAT_PROFILE: number;
    readonly OPENGL_CORE_PROFILE: number;
    readonly CURSOR: number;
    readonly STICKY_KEYS: number;
    readonly STICKY_MOUSE_BUTTONS: number;
    readonly CURSOR_NORMAL: number;
    readonly CURSOR_HIDDEN: number;
    readonly CURSOR_DISABLED: number;
    readonly CONNECTED: number;
    readonly DISCONNECTED: number;
}


import * as bindings from 'bindings';

export const glfw: GLFW = bindings('glfw');

(<any>glfw).inspect = (depth, options) => options.stylize('[object GLFW]', 'special');
